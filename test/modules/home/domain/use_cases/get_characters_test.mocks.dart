// Mocks generated by Mockito 5.0.10 from annotations
// in rick_morty_and_flutter/test/modules/home/domain/use_cases/get_characters_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rick_morty_and_flutter/shared/error/failures.dart' as _i5;
import 'package:rick_morty_and_flutter/modules/character/domain/entities/character.dart'
    as _i6;
import 'package:rick_morty_and_flutter/modules/character/domain/repositories/character.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [CharacterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterRepository extends _i1.Mock
    implements _i3.CharacterRepository {
  MockCharacterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Character>>> getCharacters() =>
      (super.noSuchMethod(Invocation.method(#getCharacters, []),
              returnValue:
                  Future<_i2.Either<_i5.Failure, List<_i6.Character>>>.value(
                      _FakeEither<_i5.Failure, List<_i6.Character>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Character>>>);
}
